[{"permalink":"//","layout":"default","title":"Página Proyectos de José Juan","content":"# Página Proyectos de José Juan ","dir":"/","name":"README.md","path":"README.md","url":"/"},{"permalink":"/bbdd/","layout":"default","title":"BASE DE DATOS","content":"# BASE DE DATOS\n\n## Apartado de Administración de Sistemas Gestores de Bases de Datos de José Juan Hervás Carrasco.","dir":"/bbdd/","name":"README.md","path":"bbdd/README.md","url":"/bbdd/"},{"layout":"default","title":"INTERCONEXIÓN DE SERVIDORES","content":"# INTERCONEXIÓN DE SERVIDORES\n\n## Introducción\n","dir":"/bbdd/","name":"interconexion.md","path":"bbdd/interconexion.md","url":"/bbdd/interconexion.html"},{"permalink":"/sistemas/","layout":"default","title":"SISTEMAS OPERATIVOS","content":"# SISTEMAS OPERATIVOS\n\n## Apartado de Sistemas Operativos de José Juan Hervás Carrasco.","dir":"/sistemas/","name":"README.md","path":"sistemas/README.md","url":"/sistemas/"},{"layout":"default","title":"COMPILACION DE UN KERNEL LINUX A MEDIDA","content":"# COMPILACION DE UN KERNEL LINUX A MEDIDA\n\n## Introducción\n\nEn este apartado descargaremos una versión de kernel desde la página https://kernel.org/ y haremos lo siguiente:\n\n- Instalar dependencias\n\n- Descargar Kernel\n\n- Compilar Kernel\n\n- Crear imagen .deb\n\n- Instalar archivo .deb creado anteriormente\n\n- Reducir módulos del Kernel\n\nLa versión de Kernel que he elegido para este apartado es la versión 6.0.7.\n\n---\n\n## Instalar Dependencias\n\n---\n\nEn este punto lo primero que haremos será instalar los paquetes necesarios para poder compilar el kernel y posteriormente crear el fichero .deb correspondiente.\n\nPrimero actualizamos:\n\n```shell\njoseju@debian:~$ sudo apt update\n```\n\nInstalamos las dependencias:\n```shell\njoseju@debian:~$ sudo apt install build-essential qtbase5-dev libelf-dev pkg-config \n```\n\n---\n\n## Descargar Kernel\n\n---\n\nUna vez hemos instalado las correspondientes dependencias, descargaremos el archivo del kernel:\n\n```shell\njoseju@debian:~/compilacion_kernel$ wget https://mirrors.edge.kernel.org/pub/linux/kernel/v6.x/linux-6.0.7.tar.xz\n```\n\n---Reducir módulos del Kernel\n\njoseju@debian:~/compilacion_kernel$ tar -xvf linux-6.0.7.tar.xz\n```\n\nPosteriormente, accedemos a la carpeta y compilamos el archivo oldconfig:\n\n```shell\njoseju@debian:~/compilacion_kernel/linux-6.0.7$ make oldconfig\n```\n- Al compilarlo nos hará muchas preguntas, dejamos pulsado intro ya que por defecto indicamos que no.\n\nUna vez hecho esto, se nos habrá generado un fichero oculto llamado .config:\n\n```shell\nusuario@debian:~/compilacion_kernel/linux-6.0.7$ ls -la | egrep '.config'\n-rw-r--r-- 1 usuario usuario 59 nov 3 16:00 .cocciconfig\n-rw-r--r-- 1 usuario usuario 252431 nov 17 14:12 .config\n-rw-r--r-- 1 usuario usuario 555 nov 3 16:00 Kconfig\n```\n\nEn este fichero se almacenan los módulos que vienen por defecto y que posteriormente deberemos ir desactivando, pero este no es el caso, asi que prodeceremos a compilar este archivo para reducir módulos automáticamente:\n\n```shell\nusuario@debian:~/compilacion_kernel/linux-6.0.7$ make localmodconfig\n```\n\n---\n\n## Crear imagen .deb\n\n---\n\nAhora que hemos reducido los módulos, procederemos a generar nuestra imagen .deb del kernel, para ello:\n\n```shell\nusuario@debian:~/compilacion_kernel/linux-6.0.7$ make -j12 bindeb-pkg\n```\n\n- Esto tardará un rato ya que antes de reducir considerablemente el número de módulos, se tienen que cargar los que vienen por defecto.\n\n---\n\n## Instalar archivo .deb creado anteriormente\n\n---\n\nPrimero, verificamos la versión del kernel que tenemos actualmente en funcionamiento:\n\n```shell\nusuario@debian:~$ uname -r\n5.10.0-18-amd64\n```\n\nAhora que hemos compilado y generado el fichero .deb, procederemos a instalar el fichero .deb que se nos ha generado y este se añadirá al grub como una nueva versión de kernel._\n\n```shell\nusuario@debian:~/compilacion_kernel/linux-6.0.7$ sudo dpkg -i ../linux-image-6.0.7_6.0.7-1_amd64.deb\n```\n\nEn este punto reiniciamos la máquina y comprobamos que la nueva versión del kernel funciona correctmente\n\n```shell\nusuario@debian:~$ sudo reboot\n```\n\n---\n\n## Reducir módulos del Kernel\n\n---\n\nPrimero, comprobamos la versión de kernel actual tras el reinicio:\n\n```shell\nusuario@debian:~$ uname -r\n6.0.7\n```\n\nAhora que tenemos cargada la nueva versión de kernel en nuestro sistema operativo, debemos reducir el número de módulos a medida de las características del hardware de nuestro equipo.\n\nPor ejemplo nuestro equipo funciona con un procesador intel, pues los módulos que sean amd los podemos desactivar.\n\nAntes de editar los módulos, comprobamos los módulos que tiene actualmente el fichero .config:\n\n```shell\nusuario@debian:~/compilacion_kernel/linux-6.0.7$ egrep '=y' .config | wc -l\n1627\nusuario@debian:~/compilacion_kernel/linux-6.0.7$ egrep '=m' .config | wc -l\n193\n```\n\nPara editar los módulos del kernel ejecutamos el siguiente comando:\n\n```shell\nusuario@debian:~/compilacion_kernel/linux-6.0.7$ make xconfig\n```\n\nNos aparecerá una ventana gráfica donde deberemos ir desmarcando los módulos que sean necesarios.\n","dir":"/sistemas/","name":"compilacion-kernel.md","path":"sistemas/compilacion-kernel.md","url":"/sistemas/compilacion-kernel.html"}]